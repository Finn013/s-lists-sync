
import React, { useState, useEffect } from 'react';
import { Button } from './ui/button';
import { Download, X } from 'lucide-react';

interface BeforeInstallPromptEvent extends Event {
  readonly platforms: string[];
  readonly userChoice: Promise<{
    outcome: 'accepted' | 'dismissed';
    platform: string;
  }>;
  prompt(): Promise<void>;
}

const PWAInstaller: React.FC = () => {
  const [deferredPrompt, setDeferredPrompt] = useState<BeforeInstallPromptEvent | null>(null);
  const [showInstallBanner, setShowInstallBanner] = useState(false);
  const [isIOS, setIsIOS] = useState(false);
  const [isAndroid, setIsAndroid] = useState(false);
  const [isStandalone, setIsStandalone] = useState(false);

  useEffect(() => {
    console.log('PWAInstaller: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    const userAgent = navigator.userAgent.toLowerCase();
    const iOS = /ipad|iphone|ipod/.test(userAgent);
    const android = /android/.test(userAgent);
    
    setIsIOS(iOS);
    setIsAndroid(android);
    
    console.log('PWAInstaller: iOS:', iOS, 'Android:', android);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    const standalone = window.matchMedia('(display-mode: standalone)').matches || 
                      (window.navigator as any).standalone === true ||
                      window.location.search.includes('homescreen=1');
    
    setIsStandalone(standalone);
    console.log('PWAInstaller: Standalone —Ä–µ–∂–∏–º:', standalone);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è beforeinstallprompt
    const handleBeforeInstallPrompt = (e: Event) => {
      console.log('PWAInstaller: beforeinstallprompt —Å–æ–±—ã—Ç–∏–µ –ø–æ–ª—É—á–µ–Ω–æ');
      e.preventDefault();
      setDeferredPrompt(e as BeforeInstallPromptEvent);
      setShowInstallBanner(true);
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const handleAppInstalled = () => {
      console.log('PWAInstaller: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
      setShowInstallBanner(false);
      setDeferredPrompt(null);
    };

    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
    window.addEventListener('appinstalled', handleAppInstalled);

    // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
    if ((iOS || android) && !standalone) {
      console.log('PWAInstaller: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞');
      setTimeout(() => {
        setShowInstallBanner(true);
      }, 1000);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const wasRejected = localStorage.getItem('pwa-install-rejected');
    if (wasRejected) {
      const rejectedTime = parseInt(wasRejected);
      const dayInMs = 24 * 60 * 60 * 1000;
      if (Date.now() - rejectedTime < dayInMs) {
        console.log('PWAInstaller: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–∞–≤–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏–ª —É—Å—Ç–∞–Ω–æ–≤–∫—É');
        return;
      }
    }

    return () => {
      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
      window.removeEventListener('appinstalled', handleAppInstalled);
    };
  }, []);

  const handleInstallClick = async () => {
    console.log('PWAInstaller: –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏');
    if (deferredPrompt) {
      try {
        await deferredPrompt.prompt();
        const { outcome } = await deferredPrompt.userChoice;
        
        console.log('PWAInstaller: –†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏:', outcome);
        
        if (outcome === 'accepted') {
          console.log('PWAInstaller: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è–ª —É—Å—Ç–∞–Ω–æ–≤–∫—É');
        } else {
          console.log('PWAInstaller: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª —É—Å—Ç–∞–Ω–æ–≤–∫—É');
          localStorage.setItem('pwa-install-rejected', Date.now().toString());
        }
        
        setDeferredPrompt(null);
        setShowInstallBanner(false);
      } catch (error) {
        console.error('PWAInstaller: –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:', error);
      }
    }
  };

  const handleDismiss = () => {
    console.log('PWAInstaller: –ë–∞–Ω–Ω–µ—Ä –∑–∞–∫—Ä—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
    setShowInstallBanner(false);
    localStorage.setItem('pwa-install-rejected', Date.now().toString());
  };

  // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
  if (isStandalone) {
    console.log('PWAInstaller: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    return null;
  }

  // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, –µ—Å–ª–∏ –±–∞–Ω–Ω–µ—Ä —Å–∫—Ä—ã—Ç
  if (!showInstallBanner) {
    return null;
  }

  console.log('PWAInstaller: –†–µ–Ω–¥–µ—Ä–∏–º –±–∞–Ω–Ω–µ—Ä');

  return (
    <div className="fixed bottom-4 left-4 right-4 z-50 md:left-auto md:right-4 md:max-w-sm">
      <div className="bg-blue-600 text-white p-4 rounded-lg shadow-lg border border-blue-500">
        <div className="flex items-start justify-between">
          <div className="flex-1">
            <h3 className="font-semibold text-lg mb-2">üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å S-Lists</h3>
            {isIOS ? (
              <div className="text-sm space-y-2">
                <p className="mb-2">–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ iPhone/iPad:</p>
                <ol className="list-decimal list-inside space-y-1 text-xs">
                  <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –≤ Safari üì§</li>
                  <li>–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –≤–Ω–∏–∑ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "–ù–∞ —ç–∫—Ä–∞–Ω ¬´–î–æ–º–æ–π¬ª"</li>
                  <li>–ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å"</li>
                </ol>
              </div>
            ) : isAndroid ? (
              <div className="text-sm">
                <p className="mb-3">
                  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏ —Ä–∞–±–æ—Ç—ã –æ—Ñ–ª–∞–π–Ω
                </p>
                {!deferredPrompt && (
                  <p className="text-xs opacity-80">
                    –í Chrome: –ú–µ–Ω—é ‚Üí "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" –∏–ª–∏ "–î–æ–±–∞–≤–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω"
                  </p>
                )}
              </div>
            ) : (
              <p className="text-sm mb-3">
                –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏ —Ä–∞–±–æ—Ç—ã –æ—Ñ–ª–∞–π–Ω
              </p>
            )}
          </div>
          <Button
            variant="ghost"
            size="sm"
            onClick={handleDismiss}
            className="text-white hover:bg-blue-700 p-1 h-auto ml-2"
          >
            <X className="h-4 w-4" />
          </Button>
        </div>
        
        {deferredPrompt && (
          <Button
            onClick={handleInstallClick}
            className="w-full mt-3 bg-white text-blue-600 hover:bg-gray-100"
          >
            <Download className="h-4 w-4 mr-2" />
            –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          </Button>
        )}
        
        {!deferredPrompt && isAndroid && (
          <div className="mt-3 text-xs opacity-80">
            –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –±—Ä–∞—É–∑–µ—Ä–∞
          </div>
        )}
      </div>
    </div>
  );
};

export default PWAInstaller;
